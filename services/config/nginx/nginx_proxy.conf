server {
    server_name *.tailscalenas.friddle.me;
    listen 80;
    charset utf-8;
    source_charset utf-8;
    keepalive_timeout  65;  #保持
    tcp_nodelay on;
    client_header_timeout 15;
    client_body_timeout 15;
    send_timeout 25;
    client_max_body_size 8024m;

    location / {
            set_by_lua $new_host '
                 local new_host=ngx.re.sub(ngx.var.http_host,"tailscalenas","nas")
                 return new_host;
            ';
            proxy_pass http://127.0.0.1:7080/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Host $new_host;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
    }
}

server {
    server_name *.lan.friddle.me;
    listen 80;
    charset utf-8;
    source_charset utf-8;
    keepalive_timeout  65;  #保持
    tcp_nodelay on;
    client_header_timeout 15;
    client_body_timeout 15;
    send_timeout 25;
    client_max_body_size 8024m;

    location / {
            set_by_lua $new_host '
                 local new_host=ngx.re.sub(ngx.var.http_host,"lan","nas")
                 return new_host;
            ';
            proxy_pass http://127.0.0.1:7080/;
            proxy_set_header Upgrade $http_upgrade;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header Host $new_host;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
    }
}

server {
    server_name lan.friddle.me tailscalenas.friddle.me nas.friddle.me;
    listen 80 default_server;
    charset utf-8;
    source_charset utf-8;
    keepalive_timeout  65;  #保持
    tcp_nodelay on;
    client_header_timeout 15;
    client_body_timeout 15;
    send_timeout 25;
    client_max_body_size 8024m;

    location / {
            proxy_pass http://127.0.0.1:81/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Host $new_host;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
    }
}


server {
    server_name  *.lan.friddle.me;
    listen 443 ssl;
    charset utf-8;
    source_charset utf-8;
    keepalive_timeout  65;  #保持
    tcp_nodelay on;
    client_header_timeout 15;
    client_body_timeout 15;
    send_timeout 25;
    client_max_body_size 8024m;

    ssl_certificate     /config/code.pem;
    ssl_certificate_key /config/code.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    

    location / {
            set_by_lua $new_host '
                 local new_host=ngx.re.sub(ngx.var.http_host,"lan","nas")
                 return new_host;
            ';
            proxy_pass http://127.0.0.1:7080/;
            proxy_set_header Upgrade $http_upgrade;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header Host $new_host;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
            
    }
}

server {
    server_name router.nas.friddle.me router.tailscalenas.friddle.me router.lan.friddle.me;
    listen 80;
    charset utf-8;
    source_charset utf-8;
    keepalive_timeout  65;  #保持
    tcp_nodelay on;
    client_header_timeout 15;
    client_body_timeout 15;
    send_timeout 25;
    client_max_body_size 8024m;

    location / {
            proxy_pass http://192.168.124.1:80/;
            proxy_set_header Upgrade $http_upgrade;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header Host $new_host;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
    }
}

server {
    server_name router2.nas.friddle.me router2.lan.friddle.me router2.tailscalenas.friddle.me;
    listen 80;
    charset utf-8;
    source_charset utf-8;
    keepalive_timeout  65;  #保持
    tcp_nodelay on;
    client_header_timeout 15;
    client_body_timeout 15;
    send_timeout 25;
    client_max_body_size 8024m;

    location / {
            proxy_pass http://192.168.124.93:80/;
            proxy_set_header Upgrade $http_upgrade;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header Host $new_host;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
    }
}